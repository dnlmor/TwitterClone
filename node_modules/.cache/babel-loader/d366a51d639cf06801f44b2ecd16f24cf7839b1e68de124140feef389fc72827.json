{"ast":null,"code":"var _jsxFileName = \"/Users/dnlmor/Downloads/project docs/school project/twitter-clone/tweeter/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db, collection, getDocs, addDoc, onSnapshot } from '../firebase';\nimport TweetList from '../components/TweetList';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  currentUserId\n}) => {\n  _s();\n  const [tweetContent, setTweetContent] = useState('');\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const fetchTweets = async () => {\n      const tweetsSnapshot = await getDocs(collection(db, 'tweets'));\n      const fetchedTweets = tweetsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(fetchedTweets);\n    };\n    fetchTweets();\n    const unsubscribe = onSnapshot(collection(db, 'tweets'), snapshot => {\n      const updatedTweets = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(updatedTweets);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleTweetSubmit = async e => {\n    e.preventDefault();\n    await addDoc(collection(db, 'tweets'), {\n      userId: currentUserId,\n      content: tweetContent,\n      createdAt: new Date()\n    });\n    setTweetContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTweetSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: tweetContent,\n          onChange: e => setTweetContent(e.target.value),\n          placeholder: \"What's happening?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetList, {\n        tweets: tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"oL/28ryhJfdHkqIrn15N8Xt44G0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","addDoc","onSnapshot","TweetList","jsxDEV","_jsxDEV","Home","currentUserId","_s","tweetContent","setTweetContent","tweets","setTweets","fetchTweets","tweetsSnapshot","fetchedTweets","docs","map","doc","id","data","unsubscribe","snapshot","updatedTweets","handleTweetSubmit","e","preventDefault","userId","content","createdAt","Date","className","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/dnlmor/Downloads/project docs/school project/twitter-clone/tweeter/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db, collection, getDocs, addDoc, onSnapshot } from '../firebase';\nimport TweetList from '../components/TweetList';\nimport './Home.css';\n\nconst Home = ({ currentUserId }) => {\n  const [tweetContent, setTweetContent] = useState('');\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const fetchTweets = async () => {\n      const tweetsSnapshot = await getDocs(collection(db, 'tweets'));\n      const fetchedTweets = tweetsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(fetchedTweets);\n    };\n\n    fetchTweets();\n\n    const unsubscribe = onSnapshot(collection(db, 'tweets'), (snapshot) => {\n      const updatedTweets = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(updatedTweets);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleTweetSubmit = async (e) => {\n    e.preventDefault();\n    await addDoc(collection(db, 'tweets'), {\n      userId: currentUserId,\n      content: tweetContent,\n      createdAt: new Date(),\n    });\n    setTweetContent('');\n  };\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"main-content\">\n        <form onSubmit={handleTweetSubmit}>\n          <textarea\n            value={tweetContent}\n            onChange={(e) => setTweetContent(e.target.value)}\n            placeholder=\"What's happening?\"\n          />\n          <button type=\"submit\">Tweet</button>\n        </form>\n        <TweetList tweets={tweets} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}